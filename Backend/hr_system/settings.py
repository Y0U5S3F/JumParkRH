"""
Django settings for hr_system project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import environ
import os
from pathlib import Path
import datetime
import firebase_admin
from firebase_admin import credentials

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i(ejps==t#d^=e!d%(9=1sh7@(vm_sdzft$dd%0i!wxwtbo!uk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'localhost:3000','hr.jumpark.aftercode.tn','attendance-system-three.vercel.app','pointage.api.jumpark.tn']


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # packages
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt.token_blacklist',
    'django_filters',
    'corsheaders',
    'djoser',
    'django_extensions',
    'import_export',
    'django_crontab',
    # 'django_cron',
    
    # apps
    'core',
    'department',
    'authentication',
    'service',
    'holiday',
    'absence',
    'conges',
    'device',
    'attendance',
    'society',
    'setting',
    'dashboards',
    'cron'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hr_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hr_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'pointage',
#         'USER': 'postgres',
#         'PASSWORD': '!msW8^K(vrK)&^ee',
#         'HOST': 'parkdatabase.ctv16exk8jgr.eu-west-3.rds.amazonaws.com',
#         'PORT': 5432     
#     }
# }

DATABASES = {
    'default': env.db()
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Tunis'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# specific configuration settings
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://jumpark-attendance-v2.vercel.app",
    "https://attendance-system-three.vercel.app",
    "https://hr-system-game-production.vercel.app",
    "https://pointage.api.jumpark.tn",
    "https://hr.jumpark.tn",
]



CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "https://jumpark-attendance-v2.vercel.app",
    "https://attendance-system-three.vercel.app",
    "https://hr-system-game-production.vercel.app"
]

CORS_ALLOW_HEADERS = ['Content-Type', 'Authorization']


STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')




REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
    ),
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=160),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=14),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': False,
    'AUTH_HEADER_TYPES': ('Bearer', 'jwt'),
}
#SITE_NAME = "HR System"
AUTH_USER_MODEL = 'authentication.UserAccount'




# config sentry
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
    dsn="https://36c48eb1c08449f0b0b7e725724fbe95@o4505510214565888.ingest.sentry.io/4505510220660736",
    integrations=[
        DjangoIntegration(),
    ],

    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=1.0,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True
)

# email

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'bouaoud.aness15@gmail.com'
EMAIL_HOST_PASSWORD = 'rssjwlqziynodnjb'
APPLICATION_EMAIL = 'HR system<bouaoud.aness15@gmail.com>'
DEFAULT_FROM_EMAIL = 'HR system<bouaoud.aness15@gmail.com>'


# cron job
CRONJOBS = [
    ('*/1 * * * *', 'cron.views.my_scheduled_users'),
    ('*/3 * * * *', 'cron.views.my_scheduled_job'),
    ('59 22 * * *', 'cron.views.daily_report')
]



# config firebase
# FIREBASE_ADMINSDK_JSON_PATH = os.path.join(BASE_DIR, 'secrets', 'firebase-adminsdk.json')

# cred = credentials.Certificate(FIREBASE_ADMINSDK_JSON_PATH)
# firebase_admin.initialize_app(cred)